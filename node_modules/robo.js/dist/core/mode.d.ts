/**
 * Internal
 */
declare function getModeColor(mode: string): (string: string) => string;
/**
 * Internal
 */
declare function setMode(mode: string): {
    shardModes: () => void;
};
declare const Mode: Readonly<{
    color: typeof colorMode;
    get: typeof get;
    is: typeof is;
}>;
/**
 * Returns the color function for the current mode.
 * This is used to colorize logs based on the mode when multiple exist.
 */
declare function colorMode(text: string): string;
/**
 * The current mode this Robo instance is running in.
 * This is set by the `--mode` CLI flag.
 *
 * Defaults to `production` for `robo start` and `development` for `robo dev`.
 */
declare function get(): string;
/**
 * Checks if the current mode matches the provided mode.
 *
 * @param mode The mode to check against.
 * @returns `true` if the current mode matches the provided mode.
 */
declare function is(mode: string): boolean;

export { Mode, colorMode, getModeColor, setMode };
