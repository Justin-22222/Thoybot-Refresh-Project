{"version":3,"sources":["../../src/core/env.ts"],"names":["Keys","env","key","acc","k","value"],"mappings":"AAEA,MAAMA,EAAO,CACZ,QAAS,CACR,SAAU,oBACV,eAAgB,2BAChB,QAAS,mBACT,MAAO,eACR,EACA,QAAS,WACT,SAAU,CACT,IAAK,CACJ,IAAK,eACL,QAAS,0BACV,EACA,MAAO,iBACP,IAAK,eACL,SAAU,CACT,IAAK,oBACL,QAAS,sBACV,CACD,CACD,EAEaC,EAAOC,GAEFA,EAAI,MAAM,GAAG,EAEd,OAAO,CAACC,EAAKC,IAAM,CAElC,MAAMC,EAAQF,EAAIC,CAAC,EAEnB,GAAI,OAAOC,GAAU,UAAYA,EAAM,IACtC,OAAO,QAAQ,IAAIA,EAAM,GAAG,GAAKA,EAAM,QACjC,GAAI,OAAOA,GAAU,SAC3B,OAAOA,EACD,GAAI,OAAOA,GAAU,SAC3B,OAAO,QAAQ,IAAIA,CAAK,CAE1B,EAAGL,CAAI","sourcesContent":["// import { loadEnv } from './dotenv.js'\n\nconst Keys = {\n\tdiscord: {\n\t\tclientId: 'DISCORD_CLIENT_ID',\n\t\tdebugChannelId: 'DISCORD_DEBUG_CHANNEL_ID',\n\t\tguildId: 'DISCORD_GUILD_ID',\n\t\ttoken: 'DISCORD_TOKEN'\n\t},\n\tnodeEnv: 'NODE_ENV',\n\troboplay: {\n\t\tapi: {\n\t\t\tkey: 'ROBOPLAY_API',\n\t\t\tdefault: 'https://api.roboplay.dev'\n\t\t},\n\t\tdebug: 'ROBOPLAY_DEBUG',\n\t\tenv: 'ROBOPLAY_ENV',\n\t\tfrontend: {\n\t\t\tkey: 'ROBOPLAY_FRONTEND',\n\t\t\tdefault: 'https://roboplay.dev'\n\t\t}\n\t}\n}\n\nexport const env = (key: string): string => {\n\t//loadEnv({ sync: true })\n\tconst keyParts = key.split('.')\n\n\treturn keyParts.reduce((acc, k) => {\n\t\t// @ts-expect-error - ...\n\t\tconst value = acc[k]\n\n\t\tif (typeof value === 'object' && value.key) {\n\t\t\treturn process.env[value.key] || value.default\n\t\t} else if (typeof value === 'object') {\n\t\t\treturn value\n\t\t} else if (typeof value === 'string') {\n\t\t\treturn process.env[value]\n\t\t}\n\t}, Keys) as unknown as string\n}\n"]}